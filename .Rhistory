prior = cauchy(0.5, 0.1),
data = magnitudedata)
contrasts(magnitudedata$heading) <- "contr.sum"
fit_sum <- stan_glm(FirstSteeringTime ~ heading,
family = Gamma(),
prior = cauchy(0.5, 0.1),
data = magnitudedata)
c_sum <- pairs(emmeans(fit_sum, ~ heading))
c_sum
contrasts(magnitudedata$heading) <- "contr.bayes"
fit_bayes <- stan_glm(FirstSteeringTime ~ heading,
family = gaussian(),
prior = normal(0, 0.1),
data = magnitudedata)
c_bayes <- pairs(emmeans(fit_bayes, ~ heading))
c_bayes
hyp <- c("2 < 1.5 & 1.5 < 1")
em_sum <- emmeans(fit_sum, ~ heading)
em_sum # the posterior marginal means
bayesfactor_restricted(posterior = fit_sum, hypothesis = hyp, prior = NULL)
hyp <- c("2 < 1.5",
"1.5 < 1",
"1 < 0.5")
bayesfactor_restricted(posterior = fit_sum, hypothesis = hyp, prior = NULL)
sapply(iris, class)
sapply(magnitudedata, class)
fit_sum <- stan_glm(FirstSteeringTime ~ heading,
prior = normal(0, 0.1),
data = magnitudedata)
c_sum
contrasts(iris$Species) <- contr.sum
fit_sum <- stan_glm(Sepal.Length ~ Species, data = iris,
prior = normal(0,0.1), # just to drive the point home
family = gaussian())
c_sum <- pairs(emmeans(fit_sum, ~ Species))
c_sum
contrasts(iris$Species) <- contr.bayes
fit_bayes <- stan_glm(Sepal.Length ~ Species, data = iris,
prior = normal(0,0.1),
family = gaussian())
c_bayes <- pairs(emmeans(fit_bayes, ~ Species))
c_bayes
hyp <- c(
# comparing 2 levels
"setosa > versicolor",
"setosa > virginica",
"versicolor > virginica",
# comparing 3 (or more) levels
"setosa    < virginica  & virginica  < versicolor",
"virginica < setosa     & setosa     < versicolor",
"setosa    < versicolor & versicolor < virginica"
)
# Sum contrasts
em_sum <- emmeans(fit_sum, ~Species)
em_sum # the posterior marginal means
bayesfactor_restricted(em_sum, fit_sum, hypothesis = hyp)
# Bayes contrasts
em_bayes <- emmeans(fit_bayes, ~Species)
em_bayes # the posterior marginal means
bayesfactor_restricted(em_bayes, fit_bayes, hypothesis = hyp)
fit_sum
contrasts(iris$Species)
contrasts(iris$Species) <- contr.sum
contrasts(iris$Species)
contrasts(magnitudedata) <- contr.sum
contrasts(magnitudedata$heading) <- contr.sum
contrasts(magnitudedata$heading)
rm(list = ls())
# rm(list = ls()) - clear global environment
# home working directory
# setwd("C:/Users/Courtney/Documents/PhD/Project/Experiment_Code/experiment_1")
setwd("C:/Users/pscmgo/OneDrive for Business/PhD/Project/Experiment_Code/experiment_1")
temp = list.files(pattern = c("magnitudedata", "*.csv"))
myfiles = lapply(temp, read.csv)
magnitudedata <- do.call(rbind.data.frame, myfiles)
magnitudedata <- magnitudedata %>%
dplyr::filter(heading > 0)
magnitudedata$heading <- as.factor(magnitudedata$heading)
contrasts(magnitudedata$heading) <- "contr.sum"
fit_sum <- stan_glm(FirstSteeringTime ~ heading,
prior = normal(0, 0.1),
data = magnitudedata)
contrasts(magnitudedata$heading) <- "contr.bayes"
fit_bayes <- stan_glm(FirstSteeringTime ~ heading,
family = gaussian(),
prior = normal(0, 0.1),
data = magnitudedata)
hyp <- c("2 < 1.5 & 1.5 < 1 & 1 < 0.5")
em_sum <- emmeans(fit_sum, ~ heading)
em_sum # the posterior marginal means
bayesfactor_restricted(em_sum, fit_sum, hypothesis = hyp)
posteriors <- insight::get_parameters(fit_sum)
bayesfactor_restricted(posterior = posteriors, hypothesis = hyp)
bayesfactor_restricted(posterior = posteriors, hypothesis = hyp, prior = NULL)
bayes_sum <- emmeans(fit_bayes, ~ heading)
bayes_sum # the posterior marginal means
bayesfactor_restricted(bayes_sum, fit_bayes, hypothesis = hyp, prior = NULL)
em_sum # the posterior marginal means
rm(list = ls())
# rm(list = ls()) - clear global environment
# home working directory
# setwd("C:/Users/Courtney/Documents/PhD/Project/Experiment_Code/experiment_1")
setwd("C:/Users/pscmgo/OneDrive for Business/PhD/Project/Experiment_Code/experiment_1")
temp = list.files(pattern = c("magnitudedata", "*.csv"))
myfiles = lapply(temp, read.csv)
magnitudedata <- do.call(rbind.data.frame, myfiles)
magnitudedata <- magnitudedata %>%
dplyr::filter(heading > 0)
magnitudedata$heading <- as.factor(magnitudedata$heading)
contrasts(magnitudedata$heading) <- "contr.sum"
data("sleep")
View(sleep)
rm(list = ls())
# rm(list = ls()) - clear global environment
# home working directory
# setwd("C:/Users/Courtney/Documents/PhD/Project/Experiment_Code/experiment_1")
setwd("C:/Users/pscmgo/OneDrive for Business/PhD/Project/Experiment_Code/experiment_1")
temp = list.files(pattern = c("magnitudedata", "*.csv"))
myfiles = lapply(temp, read.csv)
magnitudedata <- do.call(rbind.data.frame, myfiles)
data("iris")
magnitudedata <- magnitudedata %>%
dplyr::filter(heading > 0)
magnitudedata$heading <- as.factor(magnitudedata$heading)
contrasts(magnitudedata$heading) <- "contr.sum"
fit_sum <- stan_glm(FirstSteeringTime ~ heading,
family = Gamma(link = "identity"),
adapt_delta = 0.999,
data = magnitudedata)
c_sum <- pairs(emmeans(fit_sum, ~ heading))
c_sum
em_sum <- emmeans(fit_sum, ~ heading)
em_sum # the posterior marginal means
hyp <- c("2 < 1.5 & 1.5 < 1 & 1 < 0.5")
bayesfactor_restricted(em_sum, fit_sum, hypothesis = hyp)
fit_sum <- stan_glm(FirstSteeringTime ~ heading,
family = Gamma(),
adapt_delta = 0.999,
data = magnitudedata)
c_sum <- pairs(emmeans(fit_sum, ~ heading))
c_sum <- pairs(emmeans(fit_sum, ~ heading))
c_sum
hyp <- c("2 < 1.5 & 1.5 < 1 & 1 < 0.5")
em_sum <- emmeans(fit_sum, ~ heading)
em_sum # the posterior marginal means
bayesfactor_restricted(em_sum, fit_sum, hypothesis = hyp)
contrasts(magnitudedata$heading) <- "contr.sum"
fit_sum <- stan_glm(FirstSteeringTime ~ heading,
family = gaussian(),
adapt_delta = 0.999,
data = magnitudedata)
c_sum <- pairs(emmeans(fit_sum, ~ heading))
c_sum
hyp <- c("2 < 1.5 & 1.5 < 1 & 1 < 0.5")
em_sum <- emmeans(fit_sum, ~ heading)
em_sum # the posterior marginal means
bayesfactor_restricted(em_sum, fit_sum, hypothesis = hyp)
contrasts(magnitudedata$heading) <- "contr.bayes"
fit_bayes <- stan_glm(FirstSteeringTime ~ heading,
family = gaussian(),
data = magnitudedata)
c_bayes <- pairs(emmeans(fit_bayes, ~ heading))
c_bayes
bayes_sum <- emmeans(fit_bayes, ~ heading)
bayes_sum # the posterior marginal means
bayesfactor_restricted(bayes_sum, fit_bayes, hypothesis = hyp)
fit_sum
em_sum <- emmeans(fit_sum, ~ heading)
em_sum # the posterior marginal means
bayesfactor_restricted(em_sum, fit_sum, hypothesis = hyp)
em_sum # the posterior marginal means
rm(list = ls())
# rm(list = ls()) - clear global environment
# home working directory
# setwd("C:/Users/Courtney/Documents/PhD/Project/Experiment_Code/experiment_1")
setwd("C:/Users/pscmgo/OneDrive for Business/PhD/Project/Experiment_Code/experiment_1")
temp = list.files(pattern = c("magnitudedata", "*.csv"))
myfiles = lapply(temp, read.csv)
magnitudedata <- do.call(rbind.data.frame, myfiles)
data("iris")
magnitudedata <- magnitudedata %>%
dplyr::filter(heading > 0)
magnitudedata$heading <- as.factor(magnitudedata$heading)
fit_sum <- stan_glm(FirstSteeringTime ~ heading,
family = Gamma(link = "identity"),
adapt_delta = 0.999,
data = magnitudedata)
em_sum <- emmeans(fit_sum, ~ heading)
em_sum # the posterior marginal means
bayesfactor_restricted(em_sum, fit_sum, hypothesis = hyp)
rm(list = ls())
# rm(list = ls()) - clear global environment
# home working directory
# setwd("C:/Users/Courtney/Documents/PhD/Project/Experiment_Code/experiment_1")
setwd("C:/Users/pscmgo/OneDrive for Business/PhD/Project/Experiment_Code/experiment_1")
temp = list.files(pattern = c("magnitudedata", "*.csv"))
myfiles = lapply(temp, read.csv)
magnitudedata <- do.call(rbind.data.frame, myfiles)
data("iris")
magnitudedata <- magnitudedata %>%
dplyr::filter(heading > 0)
magnitudedata$heading <- as.factor(magnitudedata$heading)
contrasts(magnitudedata$heading) <- "contr.bayes"
fit_bayes <- stan_glm(FirstSteeringTime ~ heading,
family = gaussian(),
data = magnitudedata)
contrasts(magnitudedata$heading) <- "contr.bayes"
fit_bayes <- stan_glm(FirstSteeringTime ~ heading, family = Gamma(link = "identity"), adapt_delta = 0.999, data = magnitudedata)
hyp <- c("2 < 1.5 & 1.5 < 1 & 1 < 0.5")
posteriors <- insight::get_parameters(fit_sum)
bayes_sum <- emmeans(fit_bayes, ~ heading)
bayes_sum # the posterior marginal means
bayesfactor_restricted(bayes_sum, fit_bayes, hypothesis = hyp)
rm(list = ls())
# rm(list = ls()) - clear global environment
# home working directory
# setwd("C:/Users/Courtney/Documents/PhD/Project/Experiment_Code/experiment_1")
setwd("C:/Users/pscmgo/OneDrive for Business/PhD/Project/Experiment_Code/experiment_1")
temp = list.files(pattern = c("magnitudedata", "*.csv"))
myfiles = lapply(temp, read.csv)
magnitudedata <- do.call(rbind.data.frame, myfiles)
data("iris")
magnitudedata <- magnitudedata %>%
dplyr::filter(heading > 0)
magnitudedata$heading <- as.factor(magnitudedata$heading)
contrasts(magnitudedata$heading) <- "contr.bayes"
fit_bayes <- stan_glm(FirstSteeringTime ~ heading, family = gaussian(), adapt_delta = 0.999, data = magnitudedata)
fit_bayes
bayes_sum <- emmeans(fit_bayes, ~ heading)
bayes_sum # the posterior marginal means
bayesfactor_restricted(bayes_sum, fit_bayes, hypothesis = hyp)
hyp <- c("2 < 1.5 & 1.5 < 1 & 1 < 0.5")
bayes_sum <- emmeans(fit_bayes, ~ heading)
bayes_sum # the posterior marginal means
bayesfactor_restricted(bayes_sum, fit_bayes, hypothesis = hyp)
rm(list = ls())
# rm(list = ls()) - clear global environment
# home working directory
# setwd("C:/Users/Courtney/Documents/PhD/Project/Experiment_Code/experiment_1")
setwd("C:/Users/pscmgo/OneDrive for Business/PhD/Project/Experiment_Code/experiment_1")
temp = list.files(pattern = c("magnitudedata", "*.csv"))
myfiles = lapply(temp, read.csv)
magnitudedata <- do.call(rbind.data.frame, myfiles)
data("iris")
magnitudedata <- magnitudedata %>%
dplyr::filter(heading > 0)
magnitudedata$heading <- as.factor(magnitudedata$heading)
contrasts(magnitudedata$heading) <- "contr.bayes"
fit_bayes <- stan_glm(FirstSteeringTime ~ heading, family = Gamma(link = "identity"), prior = cuahcy(0.5, 0.1), adapt_delta = 0.999, data = magnitudedata)
fit_bayes <- stan_glm(FirstSteeringTime ~ heading, family = Gamma(link = "identity"), prior = cauchy(0.5, 0.1), adapt_delta = 0.999, data = magnitudedata)
hyp <- c("2 < 1.5 & 1.5 < 1 & 1 < 0.5")
bayes_sum <- emmeans(fit_bayes, ~ heading)
bayes_sum # the posterior marginal means
bayesfactor_restricted(bayes_sum, fit_bayes, hypothesis = hyp)
rm(list = ls())
magnitudedata <- magnitudedata %>%
dplyr::filter(heading > 0)
# rm(list = ls()) - clear global environment
# home working directory
# setwd("C:/Users/Courtney/Documents/PhD/Project/Experiment_Code/experiment_1")
setwd("C:/Users/pscmgo/OneDrive for Business/PhD/Project/Experiment_Code/experiment_1")
temp = list.files(pattern = c("magnitudedata", "*.csv"))
myfiles = lapply(temp, read.csv)
magnitudedata <- do.call(rbind.data.frame, myfiles)
data("iris")
magnitudedata <- magnitudedata %>%
dplyr::filter(heading > 0)
magnitudedata$heading <- as.factor(magnitudedata$heading)
contrasts(magnitudedata$heading) <- "contr.bayes"
fit_bayes <- stan_glm(FirstSteeringTime ~ heading, family = gaussian(), prior = cauchy(0.5, 0.1), adapt_delta = 0.999, data = magnitudedata)
hyp <- c("2 < 1.5 & 1.5 < 1 & 1 < 0.5")
bayes_sum <- emmeans(fit_bayes, ~ heading)
bayes_sum # the posterior marginal means
bayesfactor_restricted(bayes_sum, fit_bayes, hypothesis = hyp)
dput(head(magnitudedata, n = 5))
magnitudedata <- magnitudedata %>%
select(heading, FirstSteeringTime, pNum)
magnitudedata <- magnitudedata %>%
dplyr::select(heading, FirstSteeringTime, pNum)
View(magnitudedata)
dput(head(magnitudedata, n = 5))
dput(head(magnitudedata, n = 20))
a <- structure(list(heading = structure(c(4L, 1L, 4L, 3L, 4L, 3L,
4L, 3L, 4L, 1L, 4L, 4L, 4L, 4L, 4L, 3L, 3L, 3L, 4L, 4L), contrasts = "contr.bayes", .Label = c("0.5",
"1", "1.5", "2"), class = "factor"), FirstSteeringTime = c(0.433389999999999,
0.449999999999989, 0.383199999999988, 0.499899999999997, 0.566800000000001,
0.58329999999998, 0.5, 0.449799999999982, 0.566600000000022,
0.466700000000003, 0.433499999999981, 0.466799999999978, 0.549900000000036,
0.483499999999992, 0.533399999999972, 0.433400000000006, 0.533200000000022,
0.450799999999999, 0.45022, 0.46651), pNum = c(1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L
)), row.names = c(NA, 20L), class = "data.frame")
View(a)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr) # data manipulation
library(tidyr) # data manipulation
library(ggplot2) # data vis
library(BayesFactor) # performs Bayesian ANOVA
library(rstanarm) # bayesian regression modelling
library(bayestestR) # describes Bayesian models and posterior distributions
library(bayesplot) # allows plots for posterior predictive distributions
library(loo) # Bayesian model comparison
library(arm) # computes Bayes factor for glm model
library(insight) # get posterior parameters
library(fitdistrplus) # investigating the distribution of my data
library(see) # helps with plotting for bayestestR package
library(emmeans) # marginal mean from Bayesian model
data("ToothGrowth")
View(ToothGrowth)
library(sjstats) # computes partial eta squared effect size
library(effsize) # computes cohen's D for follow up t-tests
library(Rmisc) # for confidence intervals on the interaction plots
ToothGrowth %>%
dplyr::group_by(supp, dose) %>%
dplyr::summarise(m = mean(len))
# computes standard error and 95% confidence intervals
CIerror_bar <- summarySE(ToothGrowth, measurevar = "len", groupvars = c("supp", "dose"))
ggplot(data = CIerror_bar, aes(x = dose, color = supp, group = supp, y = len)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") +
geom_errorbar(aes(ymin = len - se, ymax = len + se), width = .1)
ggplot(data = CIerror_bar, aes(x = dose, color = supp, group = supp, y = len)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") +
geom_errorbar(aes(ymin = len - se, ymax = len + se), width = .1) +
geom_point()
ggplot(data = CIerror_bar, aes(x = dose, color = supp, group = supp, y = len)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") +
geom_errorbar(aes(ymin = len - se, ymax = len + se), width = .1) +
geom_point(data = ToothGrowth, aes(x = dose, y = len))
ggplot(data = CIerror_bar, aes(x = dose, color = supp, group = supp, y = len)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") +
geom_errorbar(aes(ymin = len - se, ymax = len + se), width = .1) +
geom_point(data = ToothGrowth, aes(x = dose, y = len, alpha = 0.2))
ggplot(data = CIerror_bar, aes(x = dose, color = supp, group = supp, y = len)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") +
geom_errorbar(aes(ymin = len - se, ymax = len + se), width = .1) +
geom_point(data = ToothGrowth, aes(x = dose, y = len, alpha = 0.5))
ggplot(data = CIerror_bar, aes(x = dose, color = supp, group = supp, y = len)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") +
geom_errorbar(aes(ymin = len - se, ymax = len + se), width = .1) +
geom_point(data = ToothGrowth, aes(x = dose, y = len), alpha = 0.5)
# computes standard error and 95% confidence intervals
CIerror_bar <- summarySE(ToothGrowth, measurevar = "len", groupvars = c("supp", "dose"))
ggplot(data = CIerror_bar, aes(x = dose, color = supp, group = supp, y = len)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") +
geom_errorbar(aes(ymin = len - se, ymax = len + se), width = .1) +
geom_point(data = ToothGrowth, aes(x = dose, y = len), alpha = 0.5)
ggplot(data = CIerror_bar, aes(x = dose, color = supp, group = supp, y = len)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") +
geom_errorbar(aes(ymin = len - se, ymax = len + se), width = .1) +
geom_point(data = ToothGrowth, aes(x = dose, y = len), alpha = 0.5) +
ylab("Tooth length (mm)") +
xlab("Dosage (mg)")
aov.result <- aov(len ~ supp * dose, data = ToothGrowth)
summary(aov.result)
library(lsr)
aov.result <- aov(len ~ supp * dose, data = ToothGrowth)
summary(aov.result)
etaSquared(aov.result)
TukeyHSD(aov.result)
ToothGrowth$dose <- as.factor(ToothGrowth$dose)
ToothGrowth$dose <- as.factor(ToothGrowth$dose)
aov.result <- aov(len ~ supp * dose, data = ToothGrowth)
summary(aov.result)
etaSquared(aov.result)
TukeyHSD(aov.result)
TukeyHSD(aov.result)
plot(aov.result, 2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr) # data manipulation
library(tidyr) # data manipulation
library(ggplot2) # data vis
library(BayesFactor) # performs Bayesian ANOVA
library(rstanarm) # bayesian regression modelling
library(bayestestR) # describes Bayesian models and posterior distributions
library(bayesplot) # allows plots for posterior predictive distributions
library(loo) # Bayesian model comparison
library(arm) # computes Bayes factor for glm model
library(insight) # get posterior parameters
library(fitdistrplus) # investigating the distribution of my data
library(see) # helps with plotting for bayestestR package
library(emmeans) # marginal mean from Bayesian model
library(sjstats) # computes partial eta squared effect size
library(effsize) # computes cohen's D for follow up t-tests
library(Rmisc) # for confidence intervals on the interaction plots
library(lsr) # for calculating effect size
data("ToothGrowth")
View(ToothGrowth)
ToothGrowth$dose <- as.factor(ToothGrowth$dose)
aov.result <- aov(len ~ supp * dose, data = ToothGrowth)
plot(aov.result, 2)
summary(aov.result)
etaSquared(aov.result)
fit_model <- stan_glm(len ~ supp * dose,
family = gaussian(),
adapt_delta = 0.999,
data = ToothGrowth)
fit_model
mean(ToothGrowth$len)
?contrasts
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
# rm(list = ls()) # clear environment
# load data
setwd("C:/Users/pscmgo/OneDrive for Business/PhD/Project/Experiment_Code/experiment_occlusion") # set working directory
# setwd("C:/Users/Courtney/Documents/PhD/Project/Experiment_code/experiment_occlusion")
temp = list.files(pattern = c("BenLui17_7_", "*.csv")) # list all CSV files in the directory
myfiles = lapply(temp, read.csv) # read these CSV in the directory
workingdata <- do.call(rbind.data.frame, myfiles) # convert and combine the CSV files into dataframe
library(dplyr)
workingdata <- workingdata %>%
group_by(trialn) %>%
mutate(gender = 2, age = 24, licenseTime = 77, contacts_glasses = TRUE, pNum = 7, handedness = 1) %>% # female = 1, male = 2; license time in months; right = 1, left = 2
ungroup()
View(workingdata)
setwd("C:/Users/pscmgo/OneDrive for Business/PhD/Project/Experiment_Code/experiment_occlusion/Full_Data") # set directory for data saving
write.csv(workingdata, file = "BenLui17_EXP2_7_full.csv")
rm(list = ls())
data("ToothGrowth")
View(ToothGrowth)
fit_model <- stan_glm(len ~ supp * dose,
family = gaussian(),
adapt_delta = 0.999,
data = ToothGrowth)
fit_model
post1 <- stan_glm(len ~ supp, data = ToothGrowth,
family = gaussian(link = "identity"),
adapt_delta = 0.999)
post2 <- update(post1, formula = . ~ dose)
post3 <- update(post1, formula = . ~ supp + dose)
(post4 <- update(post1, formula = . ~ supp * dose))
post1
post2
post3
post4
fit_model <- stan_glm(len ~ supp * dose,
family = gaussian(link = "identity"),
adapt_delta = 0.999,
data = ToothGrowth)
post4
# Compare them with loo
loo1 <- loo(post1, cores = 2)
loo2 <- loo(post2, cores = 2)
loo3 <- loo(post3, cores = 2)
loo4 <- loo(post4, cores = 2)
(comp <- loo_compare(loo1, loo2, loo3, loo4))
post1
post2
post3
posteriors <- insight::get_parameters(fit_model)
View(posteriors)
post1
post2
post1 <- stan_glm(len ~ 1, data = ToothGrowth,
family = gaussian(link = "identity"),
adapt_delta = 0.999)
post2 <- update(post1, formula = . ~ supp)
post3 <- update(post1, formula = . ~ dose)
post4 <- update(post1, formula = . ~ supp + dose)
(post5 <- update(post1, formula = . ~ supp * dose))
post1
post2
comparison <- bayesfactor_models(post2, post3, post4, post5, denominator = post1)
library(brms)
post1 <- brms(len ~ 1, data = ToothGrowth,
family = gaussian(link = "identity"),
adapt_delta = 0.999)
post1 <- brm(len ~ 1, data = ToothGrowth,
family = gaussian(link = "identity"),
adapt_delta = 0.999)
dasd
ads
ds
ds
sd
s
s
knitr::opts_chunk$set(echo = TRUE)
data("ToothGrowth")
View(ToothGrowth)
post1 <- brm(len ~ 1, data = ToothGrowth,
family = gaussian(link = "identity"),
adapt_delta = 0.999)
# rm(list = ls()) - clear global environment
library(dplyr) # data manipulation
library(tidyr) # data manipulation
library(ggplot2) # data vis
library(BayesFactor) # performs Bayesian ANOVA
library(rstanarm) # bayesian regression modelling
library(brms) # bayesian modelling
library(bayestestR) # describes Bayesian models and posterior distributions
library(bayesplot) # allows plots for posterior predictive distributions
library(loo) # Bayesian model comparison
library(arm) # computes Bayes factor for glm model
library(insight) # get posterior parameters
library(fitdistrplus) # investigating the distribution of my data
library(see) # helps with plotting for bayestestR package
library(emmeans) # marginal mean from Bayesian model
library(sjstats) # computes partial eta squared effect size
library(effsize) # computes cohen's D for follow up t-tests
library(Rmisc) # for confidence intervals on the interaction plots
library(lsr) # for calculating effect size
post1 <- brm(len ~ 1, data = ToothGrowth,
family = gaussian(link = "identity"),
adapt_delta = 0.999)
